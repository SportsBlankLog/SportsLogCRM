// <auto-generated />
using System;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbSqliteLib.Migrations
{
    [DbContext(typeof(CommerceContext))]
    partial class CommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("SharedLib.AddressOrganizationModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("OrganizationId");

                    b.ToTable("AddressesOrganizations");
                });

            modelBuilder.Entity("SharedLib.AttachmentForOrderModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePoint")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderDocumentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("OrderDocumentId");

                    b.ToTable("AttachmentsForOrders");
                });

            modelBuilder.Entity("SharedLib.GoodsModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BaseUnit")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsDisabled");

                    b.HasIndex("Name");

                    b.ToTable("Goods");
                });

            modelBuilder.Entity("SharedLib.OfferGoodModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Multiplicity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OfferUnit")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.HasIndex("IsDisabled");

                    b.HasIndex("Name");

                    b.ToTable("OffersGoods");
                });

            modelBuilder.Entity("SharedLib.OrderDocumentModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorIdentityUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalDocumentId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HelpdeskId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsDisabled");

                    b.HasIndex("Name");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrdersDocuments");
                });

            modelBuilder.Entity("SharedLib.OrganizationModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BankBIC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CorrespondentAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentAccount")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KPP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NewBankBIC")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewBankName")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewCorrespondentAccount")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewCurrentAccount")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewINN")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewKPP")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewLegalAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewName")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewOGRN")
                        .HasColumnType("TEXT");

                    b.Property<string>("OGRN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("INN")
                        .IsUnique();

                    b.HasIndex("IsDisabled");

                    b.HasIndex("Name");

                    b.HasIndex("OGRN")
                        .IsUnique();

                    b.HasIndex("BankBIC", "CorrespondentAccount", "CurrentAccount")
                        .IsUnique();

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("SharedLib.PaymentDocumentModelDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalDocumentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderDocumentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("OrderDocumentId");

                    b.ToTable("PaymentsDocuments");
                });

            modelBuilder.Entity("SharedLib.RowOfOrderDocumentModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressForOrderTabId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoodsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OfferId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrderDocumentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AddressForOrderTabId");

                    b.HasIndex("GoodsId");

                    b.HasIndex("OfferId");

                    b.HasIndex("OrderDocumentId");

                    b.ToTable("RowsOfOrdersDocuments");
                });

            modelBuilder.Entity("SharedLib.TabAddressForOrderModelDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AddressOrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderDocumentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AddressOrganizationId");

                    b.HasIndex("OrderDocumentId");

                    b.ToTable("TabsAddressesForOrders");
                });

            modelBuilder.Entity("SharedLib.UserOrganizationModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserPersonIdentityId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserPersonIdentityId");

                    b.HasIndex("OrganizationId", "UserPersonIdentityId")
                        .IsUnique();

                    b.ToTable("OrganizationsUsers");
                });

            modelBuilder.Entity("SharedLib.AddressOrganizationModelDB", b =>
                {
                    b.HasOne("SharedLib.OrganizationModelDB", "Organization")
                        .WithMany("Addresses")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("SharedLib.AttachmentForOrderModelDB", b =>
                {
                    b.HasOne("SharedLib.OrderDocumentModelDB", "OrderDocument")
                        .WithMany("Attachments")
                        .HasForeignKey("OrderDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderDocument");
                });

            modelBuilder.Entity("SharedLib.OfferGoodModelDB", b =>
                {
                    b.HasOne("SharedLib.GoodsModelDB", "Goods")
                        .WithMany("Offers")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("SharedLib.OrderDocumentModelDB", b =>
                {
                    b.HasOne("SharedLib.OrganizationModelDB", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("SharedLib.PaymentDocumentModelDb", b =>
                {
                    b.HasOne("SharedLib.OrderDocumentModelDB", "OrderDocument")
                        .WithMany()
                        .HasForeignKey("OrderDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderDocument");
                });

            modelBuilder.Entity("SharedLib.RowOfOrderDocumentModelDB", b =>
                {
                    b.HasOne("SharedLib.TabAddressForOrderModelDb", "AddressForOrderTab")
                        .WithMany("Rows")
                        .HasForeignKey("AddressForOrderTabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLib.GoodsModelDB", "Goods")
                        .WithMany()
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLib.OfferGoodModelDB", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLib.OrderDocumentModelDB", "OrderDocument")
                        .WithMany()
                        .HasForeignKey("OrderDocumentId");

                    b.Navigation("AddressForOrderTab");

                    b.Navigation("Goods");

                    b.Navigation("Offer");

                    b.Navigation("OrderDocument");
                });

            modelBuilder.Entity("SharedLib.TabAddressForOrderModelDb", b =>
                {
                    b.HasOne("SharedLib.AddressOrganizationModelDB", "AddressOrganization")
                        .WithMany()
                        .HasForeignKey("AddressOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLib.OrderDocumentModelDB", "OrderDocument")
                        .WithMany("AddressesTabs")
                        .HasForeignKey("OrderDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressOrganization");

                    b.Navigation("OrderDocument");
                });

            modelBuilder.Entity("SharedLib.UserOrganizationModelDB", b =>
                {
                    b.HasOne("SharedLib.OrganizationModelDB", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("SharedLib.GoodsModelDB", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("SharedLib.OrderDocumentModelDB", b =>
                {
                    b.Navigation("AddressesTabs");

                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("SharedLib.OrganizationModelDB", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SharedLib.TabAddressForOrderModelDb", b =>
                {
                    b.Navigation("Rows");
                });
#pragma warning restore 612, 618
        }
    }
}
