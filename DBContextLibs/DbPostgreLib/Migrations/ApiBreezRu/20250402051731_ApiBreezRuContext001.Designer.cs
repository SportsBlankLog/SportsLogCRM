// <auto-generated />
using System;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DbPostgreLib.Migrations.ApiBreezRu
{
    [DbContext(typeof(ApiBreezRuContext))]
    [Migration("20250402051731_ApiBreezRuContext001")]
    partial class ApiBreezRuContext001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharedLib.BreezRuElementModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Articul")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "articul");

                    b.Property<string>("BasePrice")
                        .HasColumnType("text");

                    b.Property<string>("CodeNC")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "nc");

                    b.Property<string>("CurrencyBasePrice")
                        .HasColumnType("text");

                    b.Property<string>("CurrencyRIC")
                        .HasColumnType("text");

                    b.Property<DateTime>("LoadedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Quantity")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("RIC")
                        .HasColumnType("text");

                    b.Property<string>("Stock")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "stock");

                    b.Property<string>("TimeLastUpdate")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "time");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.HasKey("Id");

                    b.HasIndex("Articul");

                    b.HasIndex("CodeNC");

                    b.HasIndex("CurrencyBasePrice");

                    b.HasIndex("CurrencyRIC");

                    b.HasIndex("LoadedDateTime");

                    b.HasIndex("Quantity");

                    b.HasIndex("Stock");

                    b.HasIndex("TimeLastUpdate");

                    b.ToTable("Goods", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
