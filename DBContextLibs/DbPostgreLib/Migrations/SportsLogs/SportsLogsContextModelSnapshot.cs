// <auto-generated />
using System;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DbPostgreLib.Migrations.SportsLogs
{
    [DbContext(typeof(SportsLogsContext))]
    partial class SportsLogsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharedLib.CustomerSportsLogModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Active")
                        .HasColumnType("text");

                    b.Property<string>("AgentID")
                        .HasColumnType("text");

                    b.Property<string>("AgentLogin")
                        .HasColumnType("text");

                    b.Property<string>("AgentType")
                        .HasColumnType("text");

                    b.Property<int>("AvailableBalance")
                        .HasColumnType("integer");

                    b.Property<string>("CasinoActive")
                        .HasColumnType("text");

                    b.Property<int>("CasinoBalance")
                        .HasColumnType("integer");

                    b.Property<int>("ContestMaxBet")
                        .HasColumnType("integer");

                    b.Property<int>("CreditLimit")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentBalance")
                        .HasColumnType("integer");

                    b.Property<string>("CustomerID")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("FreePlayBalance")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ImportedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastUpdateddAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastVerDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("MasterAgent")
                        .HasColumnType("text");

                    b.Property<int>("MaxContestPrice")
                        .HasColumnType("integer");

                    b.Property<int>("MaxMoneyLine")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPropPayout")
                        .HasColumnType("integer");

                    b.Property<int>("MaxSoccerBet")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("OpenDateTime")
                        .HasColumnType("text");

                    b.Property<int>("ParlayMaxBet")
                        .HasColumnType("integer");

                    b.Property<int>("ParlayMaxPayout")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("PendingWagerBalance")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PlayerNotes")
                        .HasColumnType("text");

                    b.Property<string>("ReadOnlyFlag")
                        .HasColumnType("text");

                    b.Property<int>("SettleFigure")
                        .HasColumnType("integer");

                    b.Property<string>("SportbookActive")
                        .HasColumnType("text");

                    b.Property<string>("SuspectedBot")
                        .HasColumnType("text");

                    b.Property<int?>("SuspectedBotType")
                        .HasColumnType("integer");

                    b.Property<string>("SuspendHorses")
                        .HasColumnType("text");

                    b.Property<string>("SuspendSportsbook")
                        .HasColumnType("text");

                    b.Property<int>("TeaserMaxBet")
                        .HasColumnType("integer");

                    b.Property<int>("TempCreditAdj")
                        .HasColumnType("integer");

                    b.Property<int>("WagerLimit")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Customers", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
