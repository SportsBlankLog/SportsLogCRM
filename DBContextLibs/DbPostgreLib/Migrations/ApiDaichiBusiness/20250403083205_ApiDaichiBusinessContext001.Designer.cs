// <auto-generated />
using System;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DbPostgreLib.Migrations.ApiDaichiBusiness
{
    [DbContext(typeof(ApiDaichiBusinessContext))]
    [Migration("20250403083205_ApiDaichiBusinessContext001")]
    partial class ApiDaichiBusinessContext001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharedLib.AttributeDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name");

                    b.ToTable("Attributes", "public");
                });

            modelBuilder.Entity("SharedLib.AttributeValueDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AttributeId")
                        .HasColumnType("integer");

                    b.Property<int>("GoodsId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValueAttribute")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("GoodsId");

                    b.HasIndex("Name");

                    b.ToTable("AttributesValues", "public");
                });

            modelBuilder.Entity("SharedLib.AvailabilityGoodsDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DELIVERY_AMOUNT")
                        .HasColumnType("integer");

                    b.Property<bool>("DELIVERY_HIDE_MORE_LIMIT")
                        .HasColumnType("boolean");

                    b.Property<int>("GoodsId")
                        .HasColumnType("integer");

                    b.Property<int>("STORE_AMOUNT")
                        .HasColumnType("integer");

                    b.Property<bool>("STORE_HIDE_MORE_LIMIT")
                        .HasColumnType("boolean");

                    b.Property<int>("STORE_LIMIT")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GoodsId");

                    b.HasIndex("StoreId");

                    b.ToTable("AvailabilityGoods", "public");
                });

            modelBuilder.Entity("SharedLib.GoodsDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean");

                    b.Property<int>("KeyIndex")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XML_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NAME");

                    b.HasIndex("XML_ID")
                        .IsUnique();

                    b.ToTable("Goods", "public");
                });

            modelBuilder.Entity("SharedLib.GroupAttributeDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("GroupsAttributes", "public");
                });

            modelBuilder.Entity("SharedLib.PriceDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CURRENCY")
                        .HasColumnType("text");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XML_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NAME");

                    b.HasIndex("XML_ID")
                        .IsUnique();

                    b.ToTable("Prices", "public");
                });

            modelBuilder.Entity("SharedLib.PriceGoodsDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GoodsId")
                        .HasColumnType("integer");

                    b.Property<string>("PRICE")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("GoodsId");

                    b.HasIndex("PRICE");

                    b.ToTable("PricesGoods", "public");
                });

            modelBuilder.Entity("SharedLib.StoreDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IS_DEFAULT")
                        .HasColumnType("text");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XML_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NAME");

                    b.HasIndex("XML_ID")
                        .IsUnique();

                    b.ToTable("Stores", "public");
                });

            modelBuilder.Entity("SharedLib.AttributeDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.GroupAttributeDaichiModelDB", "Group")
                        .WithMany("AttributesValues")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("SharedLib.AttributeValueDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.AttributeDaichiModelDB", "Attribute")
                        .WithMany("AttributesValues")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLib.GoodsDaichiModelDB", "Goods")
                        .WithMany("AttributesValues")
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("SharedLib.AvailabilityGoodsDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.GoodsDaichiModelDB", "Goods")
                        .WithMany()
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLib.StoreDaichiModelDB", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SharedLib.PriceGoodsDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.GoodsDaichiModelDB", "Goods")
                        .WithMany()
                        .HasForeignKey("GoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goods");
                });

            modelBuilder.Entity("SharedLib.AttributeDaichiModelDB", b =>
                {
                    b.Navigation("AttributesValues");
                });

            modelBuilder.Entity("SharedLib.GoodsDaichiModelDB", b =>
                {
                    b.Navigation("AttributesValues");
                });

            modelBuilder.Entity("SharedLib.GroupAttributeDaichiModelDB", b =>
                {
                    b.Navigation("AttributesValues");
                });
#pragma warning restore 612, 618
        }
    }
}
