// <auto-generated />
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DbPostgreLib.Migrations.ApiDaichiBusiness
{
    [DbContext(typeof(ApiDaichiBusinessContext))]
    [Migration("20250408135148_ApiDaichiBusinessContext001")]
    partial class ApiDaichiBusinessContext001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharedLib.AttributeParameterDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GROUP")
                        .HasColumnType("text");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("VALUE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CODE");

                    b.HasIndex("GROUP");

                    b.HasIndex("NAME");

                    b.HasIndex("ParentId");

                    b.HasIndex("VALUE");

                    b.ToTable("Attributes", "public");
                });

            modelBuilder.Entity("SharedLib.AvailabilityProductsDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DELIVERY_AMOUNT")
                        .HasColumnType("integer");

                    b.Property<bool?>("DELIVERY_HIDE_MORE_LIMIT")
                        .HasColumnType("boolean");

                    b.Property<int?>("DELIVERY_LIMIT")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("STORE_AMOUNT")
                        .HasColumnType("integer");

                    b.Property<bool?>("STORE_HIDE_MORE_LIMIT")
                        .HasColumnType("boolean");

                    b.Property<int?>("STORE_LIMIT")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("StoreId");

                    b.ToTable("AvailabilityGoods", "public");
                });

            modelBuilder.Entity("SharedLib.ParameterEntryDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BRAND")
                        .HasColumnType("text");

                    b.Property<string>("ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MAIN_SECTION")
                        .HasColumnType("text");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XML_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NAME");

                    b.HasIndex("XML_ID");

                    b.ToTable("ParametersCatalog", "public");
                });

            modelBuilder.Entity("SharedLib.ParamsProductDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ATTR_L_GOODGROUP")
                        .HasColumnType("text");

                    b.Property<string>("ATTR_L_GOODTYPE")
                        .HasColumnType("text");

                    b.Property<string>("ATTR_L_IN_UNIT_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("ATTR_L_SERIA")
                        .HasColumnType("text");

                    b.Property<string>("ATTR_RUS_NAME_AX")
                        .HasColumnType("text");

                    b.Property<string>("BRAND")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ParamsProducts", "public");
                });

            modelBuilder.Entity("SharedLib.PhotoParameterDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.ToTable("PhotosParameters", "public");
                });

            modelBuilder.Entity("SharedLib.PriceProductDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CURRENCY")
                        .HasColumnType("text");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PRICE")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("XML_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NAME");

                    b.HasIndex("PRICE");

                    b.HasIndex("ProductId");

                    b.HasIndex("XML_ID");

                    b.ToTable("PricesProducts", "public");
                });

            modelBuilder.Entity("SharedLib.ProductDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("KeyIndex")
                        .HasColumnType("integer");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XML_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NAME");

                    b.HasIndex("XML_ID");

                    b.ToTable("Products", "public");
                });

            modelBuilder.Entity("SharedLib.SectionParameterDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.ToTable("SectionsParameters", "public");
                });

            modelBuilder.Entity("SharedLib.StoreDaichiModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IS_DEFAULT")
                        .HasColumnType("text");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("boolean");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("XML_ID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NAME");

                    b.HasIndex("XML_ID");

                    b.ToTable("Stores", "public");
                });

            modelBuilder.Entity("SharedLib.AttributeParameterDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.ParameterEntryDaichiModelDB", "Parent")
                        .WithMany("Attributes")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SharedLib.AvailabilityProductsDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.ProductDaichiModelDB", "Product")
                        .WithOne("StoreAvailability")
                        .HasForeignKey("SharedLib.AvailabilityProductsDaichiModelDB", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLib.StoreDaichiModelDB", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SharedLib.ParamsProductDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.ProductDaichiModelDB", "Product")
                        .WithOne("Params")
                        .HasForeignKey("SharedLib.ParamsProductDaichiModelDB", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SharedLib.PhotoParameterDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.ParameterEntryDaichiModelDB", "Parent")
                        .WithMany("Photos")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SharedLib.PriceProductDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.ProductDaichiModelDB", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SharedLib.SectionParameterDaichiModelDB", b =>
                {
                    b.HasOne("SharedLib.ParameterEntryDaichiModelDB", "Parent")
                        .WithMany("Sections")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SharedLib.ParameterEntryDaichiModelDB", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Photos");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("SharedLib.ProductDaichiModelDB", b =>
                {
                    b.Navigation("Params");

                    b.Navigation("Prices");

                    b.Navigation("StoreAvailability");
                });
#pragma warning restore 612, 618
        }
    }
}
