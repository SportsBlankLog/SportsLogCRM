<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="${basedir}/nlog-apiBreezRu/internal-nlog-apiBreezRu.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		<add assembly="NLog.Database"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="${basedir}/nlog-apiBreezRu/nlog-apiBreezRu-all-${shortdate}.log" maxArchiveFiles="5"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="${basedir}/nlog-apiBreezRu/nlog-apiBreezRu-own-${shortdate}.log" maxArchiveFiles="5"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${level}|${logger}|${message} ${exception:format=tostring} ${aspnet-request-url}" />

		<target name="database" xsi:type="Database">
			<dbProvider>Npgsql.NpgsqlConnection, Npgsql, Version=5.0.0.0, Culture=neutral, PublicKeyToken=5120e14c03d0593c</dbProvider>
			<connectionString>Server=localhost;Port=5432;User Id=nlog;Password=nlog;Database=NLogs;</connectionString>
			<commandText>
				INSERT INTO public."Logs" ("ApplicationName", "RecordTime", "RecordLevel", "RecordMessage", "Logger", "CallSite", "ExceptionMessage", "StackTrace", "ContextPrefix", "AllEventProperties")
				VALUES (:ApplicationName, CAST(:RecordTime AS timestamp), :RecordLevel, :RecordMessage, :Logger, :CallSite, :ExceptionMessage, :StackTrace, :ContextPrefix, :AllEventProperties);
			</commandText>
			<parameter name="@ApplicationName" layout="ApiBreezRu" />
			<parameter name="@RecordTime" layout="${longdate}" />
			<parameter name="@RecordLevel" layout="${level}" />
			<parameter name="@RecordMessage" layout="${message}" />
			<parameter name="@Logger" layout="${logger}" />
			<parameter name="@CallSite" layout="${callsite}" />
			<parameter name="@ExceptionMessage" layout="${exception:format=tostring}" />
			<parameter name="@StackTrace" layout="${stacktrace}" />
			<parameter name="@ContextPrefix" layout="${environment:TransmissionQueueNamePrefix}" />
			<parameter name="@AllEventProperties" layout="${stacktrace}" />
		</target>

	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<logger name="Polly.*" finalMinLevel="Warn" />
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="lifetimeConsole" />
		<logger name="*" minlevel="Info" writeTo="allfile" />

		<!-- Suppress output from Microsoft framework when non-critical Polly.Telemetry -->
		<logger name="System.*" finalMinLevel="Warn" />
		<logger name="Microsoft.*" finalMinLevel="Warn" />
		<!-- Keep output from Microsoft.Hosting.Lifetime to console for fast startup detection -->
		<logger name="Microsoft.Hosting.Lifetime*" finalMinLevel="Info" writeTo="lifetimeConsole" />

		<logger name="*" minlevel="Warn" writeTo="ownFile-web" />
		<logger name="*" minlevel="Info" writeTo="database" />
	</rules>
</nlog>