@using BlazorLib.Components.Shared
@using Microsoft.AspNetCore.Components.Web
@using SharedLib

@inherits BlazorBusyComponentBaseModel

@if (_metaData is not null)
{
    <MudStack Row="true" Class="mb-4">
        @if (_metaData.ContextsPrefixesAvailable.Count != 0)
        {
            <FiltersUniversalComponent FiltersAvailable="_metaData.ContextsPrefixesAvailable" Title="Префикс/Имя контура" @ref="ContextsPrefixesAvailable" CheckedChangedHandle="CheckedChangedAction" />
        }
        @if (_metaData.ApplicationsAvailable.Count != 0)
        {
            <FiltersUniversalComponent FiltersAvailable="_metaData.ApplicationsAvailable" Title="App`s" @ref="ApplicationsAvailable" CheckedChangedHandle="CheckedChangedAction" />
        }
        @if (_metaData.LevelsAvailable.Count != 0)
        {
            <FiltersUniversalComponent FiltersAvailable="_metaData.LevelsAvailable" Title="Levels" @ref="LevelsAvailable" CheckedChangedHandle="CheckedChangedAction" />
        }
        @if (_metaData.LoggersAvailable.Count != 0)
        {
            <FiltersUniversalComponent FiltersAvailable="_metaData.LoggersAvailable" Title="Loggers" @ref="LoggersAvailable" CheckedChangedHandle="CheckedChangedAction" />
        }
    </MudStack>
}

<MudTable ServerData="ServerReload" Dense="true" Hover="true" @ref="table" Loading="IsBusyProgress">
    <ToolBarContent>
        <MudText Typo="Typo.h6">
            Логи
            @if (IsBusyProgress)
            {
                <sup class="spinner-grow spinner-grow-sm text-primary"></sup>
            }
            else
            {
                <sup title="Обновить" @onclick="ReloadTable" style="cursor:pointer;" class="bi bi-arrow-clockwise text-success-emphasis"></sup>
            }
        </MudText>
        <MudSpacer />
        <MudDateRangePicker @ref="_picker" @bind-DateRange="DateRangeBind" AutoClose PickerVariant="PickerVariant.Dialog">
            <PickerActions>
                <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.ClearAsync())">Clear</MudButton>
                <MudButton OnClick="@(() => _picker.CloseAsync(false))">Cancel</MudButton>
                <MudButton Color="Color.Primary" OnClick="@(() => _picker.CloseAsync())">Ok</MudButton>
            </PickerActions>
        </MudDateRangePicker>
        <MudCheckBox @bind-Value="StackTrace" Label="StackTrace" />
        <MudCheckBox @bind-Value="CallSite" Label="CallSite" />
        <MudCheckBox @bind-Value="Logger" Label="Logger" />
        <MudCheckBox @bind-Value="ExceptionMessage" Label="ExceptionMessage" />
        <MudCheckBox @bind-Value="AllEventProperties" Label="AllEventProperties" />
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortLabel="RecordTime" T="NLogRecordModelDB">RecordTime</MudTableSortLabel></MudTh>
        <MudTh>App</MudTh>
        <MudTh>Message</MudTh>
        <MudTh>Level</MudTh>
        @if (StackTrace)
        {
            <MudTh>StackTrace</MudTh>
        }
        @if (CallSite)
        {
            <MudTh>CallSite</MudTh>
        }
        @if (Logger)
        {
            <MudTh>Logger</MudTh>
        }
        @if (ExceptionMessage)
        {
            <MudTh>ExceptionMessage</MudTh>
        }
        @if (AllEventProperties)
        {
            <MudTh>AllEventProperties</MudTh>
        }
        @if (ContextPrefix)
        {
            <MudTh>ContextPrefix</MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        @{
            string _classLevel = GetClassLevel(context.RecordLevel); // Error, Warn, Info
        }
        <MudTd DataLabel="RecordTime" Class="@_classLevel">@context.RecordTime</MudTd>
        <MudTd DataLabel="App" Class="@_classLevel">@context.ApplicationName <sup>@context.ContextPrefix</sup></MudTd>
        <MudTd DataLabel="Message" Class="@_classLevel">@context.RecordMessage</MudTd>
        <MudTd DataLabel="Level" Class="@_classLevel">@context.RecordLevel</MudTd>

        @if (StackTrace)
        {
            <MudTd DataLabel="StackTrace">@context.StackTrace</MudTd>
        }
        @if (CallSite)
        {
            <MudTd DataLabel="CallSite">@context.CallSite</MudTd>
        }
        @if (Logger)
        {
            <MudTd DataLabel="Logger">@context.Logger</MudTd>
        }
        @if (ExceptionMessage)
        {
            <MudTd DataLabel="ExceptionMessage">@context.ExceptionMessage</MudTd>
        }
        @if (AllEventProperties)
        {
            <MudTd DataLabel="AllEventProperties">@context.AllEventProperties</MudTd>
        }
        @if (ContextPrefix)
        {
            <MudTd DataLabel="ContextPrefix">@context.ContextPrefix</MudTd>
        }
    </RowTemplate>
    <NoRecordsContent>
        <MudText>Ни чего не найдено</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Загрузка...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudPagination MiddleCount="5" BoundaryCount="5" SelectedChanged="PageChanged" Count="@((table.GetFilteredItemsCount() + table.RowsPerPage - 1) / table.RowsPerPage)" Class="pa-4" />
    </PagerContent>
</MudTable>
