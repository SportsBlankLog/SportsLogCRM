@inherits LayoutComponentBase

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" @rendermode="new InteractiveServerRenderMode(prerender: false)" />
<MudDialogProvider @rendermode="new InteractiveServerRenderMode(prerender: false)" />
<MudSnackbarProvider @rendermode="new InteractiveServerRenderMode(prerender: false)" />
<MudPopoverProvider @rendermode="new InteractiveServerRenderMode(prerender: false)" />

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="@GetRootDomain()" title="Документация" target="_blank">API</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
    @if (NavMainMenu.BottomNavMenuItems?.Any() == true)
    {
        <nav class="navbar fixed-bottom bg-body-tertiary">
            <div class="container-fluid">
                @foreach (NavItemModel nav_item in NavMainMenu.BottomNavMenuItems)
                {
                    if (string.IsNullOrWhiteSpace(nav_item.AuthorizeViewRoles))
                    {
                        <div class="nav-item px-3">
                            <NavLink class="nav-link px-3" href="@(nav_item.HrefNav)" Match="@(nav_item.IsNavLinkMatchAll ? NavLinkMatch.All : NavLinkMatch.Prefix)">
                                <span aria-hidden="true"></span> @nav_item.Title
                            </NavLink>
                        </div>
                    }
                    else if (nav_item.AuthorizeViewRoles.Trim().Equals("*"))
                    {
                        <AuthorizeView>
                            <Authorized>
                                <div class="nav-item px-3">
                                    <NavLink class="nav-link px-3" href="@(nav_item.HrefNav)" Match="@(nav_item.IsNavLinkMatchAll ? NavLinkMatch.All : NavLinkMatch.Prefix)">
                                        <span aria-hidden="true"></span> @nav_item.Title
                                    </NavLink>
                                </div>
                            </Authorized>
                        </AuthorizeView>
                    }
                    else
                    {
                        <AuthorizeView Roles="@nav_item.AuthorizeViewRoles">
                            <Authorized>
                                <div class="nav-item px-3">
                                    <NavLink class="nav-link px-3" href="@(nav_item.HrefNav)" Match="@(nav_item.IsNavLinkMatchAll ? NavLinkMatch.All : NavLinkMatch.Prefix)">
                                        <span aria-hidden="true"></span> @nav_item.Title
                                    </NavLink>
                                </div>
                            </Authorized>
                        </AuthorizeView>
                    }
                }
            </div>
        </nav>
    }
</div>

<div id="blazor-error-ui">
    Произошла необработанная ошибка.
    <a href="" class="reload">Перезагрузить</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    [Inject]
    NavigationManager NavRepo { get; set; } = default!;


    [CascadingParameter, EditorRequired]
    public required NavMainMenuModel NavMainMenu { get; set; }

    private bool _isDarkMode = true;

    string GetRootDomain()
    {
        Uri _uri = new(NavRepo.BaseUri);
        return $"{_uri.Scheme}://api.{_uri.Authority}/swagger/";
    }
}