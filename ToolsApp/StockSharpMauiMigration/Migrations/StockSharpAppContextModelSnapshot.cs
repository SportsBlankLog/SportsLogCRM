// <auto-generated />
using System;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StockSharpMauiMigration.Migrations
{
    [DbContext(typeof(StockSharpAppContext))]
    partial class StockSharpAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("SharedLib.ExchangeBoardModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastAtUpdatedUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("ExchangeBoards");
                });

            modelBuilder.Entity("SharedLib.InstrumentTradeModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExchangeBoardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdRemote")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastAtUpdatedUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeBoardId");

                    b.HasIndex("Name");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("SharedLib.InstrumentTradeModelDB", b =>
                {
                    b.HasOne("SharedLib.ExchangeBoardModelDB", "ExchangeBoard")
                        .WithMany("Instruments")
                        .HasForeignKey("ExchangeBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExchangeBoard");
                });

            modelBuilder.Entity("SharedLib.ExchangeBoardModelDB", b =>
                {
                    b.Navigation("Instruments");
                });
#pragma warning restore 612, 618
        }
    }
}
