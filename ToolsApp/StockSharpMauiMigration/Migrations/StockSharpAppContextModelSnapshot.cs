// <auto-generated />
using System;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StockSharpMauiMigration.Migrations
{
    [DbContext(typeof(StockSharpAppContext))]
    partial class StockSharpAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("SharedLib.ExchangeBoardModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastAtUpdatedUTC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LastAtUpdatedUTC");

                    b.HasIndex("Name");

                    b.ToTable("BoardsExchange");
                });

            modelBuilder.Entity("SharedLib.InstrumentExternalIdModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bloomberg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cusip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IQFeed")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("InteractiveBrokers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Isin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentInstrumentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Plaza")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ric")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sedol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentInstrumentId")
                        .IsUnique();

                    b.ToTable("InstrumentsExternalsIds");
                });

            modelBuilder.Entity("SharedLib.InstrumentTradeModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CfiCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUTC")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Decimals")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExchangeBoardId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FaceValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdRemote")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastAtUpdatedUTC")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Multiplier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OptionStyle")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OptionType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrimaryId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("SettlementDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SettlementType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Shortable")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TypeInstrument")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnderlyingSecurityId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UnderlyingSecurityType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeBoardId");

                    b.HasIndex("IsFavorite");

                    b.HasIndex("LastAtUpdatedUTC");

                    b.HasIndex("Name");

                    b.ToTable("Instruments");
                });

            modelBuilder.Entity("SharedLib.InstrumentExternalIdModelDB", b =>
                {
                    b.HasOne("SharedLib.InstrumentTradeModelDB", "ParentInstrument")
                        .WithOne("ExternalId")
                        .HasForeignKey("SharedLib.InstrumentExternalIdModelDB", "ParentInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentInstrument");
                });

            modelBuilder.Entity("SharedLib.InstrumentTradeModelDB", b =>
                {
                    b.HasOne("SharedLib.ExchangeBoardModelDB", "ExchangeBoard")
                        .WithMany("Instruments")
                        .HasForeignKey("ExchangeBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExchangeBoard");
                });

            modelBuilder.Entity("SharedLib.ExchangeBoardModelDB", b =>
                {
                    b.Navigation("Instruments");
                });

            modelBuilder.Entity("SharedLib.InstrumentTradeModelDB", b =>
                {
                    b.Navigation("ExternalId");
                });
#pragma warning restore 612, 618
        }
    }
}
