@using MudBlazor

@inherits TTabOfDocumenBaseComponent

<div class="card">
    <div class="card-body">

        <CascadingValue Value="this">
            @{
                int i = -1;
            }
            @foreach (FormFitModel form in TabMetadata.Forms)
            {
                i++;

                if (TabOfDocument.JoinsForms?.Count != TabMetadata.Forms.Length)
                    throw new Exception();

                TabJoinDocumentSchemeConstructorModelDB join = TabOfDocument.JoinsForms![i];

                FormConstructorModelDB form_c = join.Form!;
                List<ValueDataForSessionOfDocumentModelDB> _sv = SessionValues is null ? [] : [.. SessionValues.Where(x => x.TabJoinDocumentSchemeId == TabOfDocument.Id && x.TabJoinDocumentScheme!.FormId == form_c.Id)];
                
                <CascadingValue Value="join">
                    <CascadingValue Value="TabMetadata">
                        <CascadingValue Value="FormsStack">
                            <CascadingValue Value="form">
                                <CascadingValue Value="form_c">
                                    <CascadingValue Value="_sv">
                                        <CascadingValue Value="FormChangeEvent">
                                            <CascadingValue Value="TabOfDocument">
                                                @if (form.IsTable)
                                                {
                                                    <TableFormOfTabConstructorComponent DocumentKey="DocumentKey" />
                                                }
                                                else
                                                {
                                                    <FormOfTabConstructorComponent DocumentKey="DocumentKey" ID="@($"{TabMetadata.SystemName}-{form.SystemName}")" />
                                                }
                                            </CascadingValue>
                                        </CascadingValue>
                                    </CascadingValue>
                                </CascadingValue>
                            </CascadingValue>
                        </CascadingValue>
                    </CascadingValue>
                </CascadingValue>
            }
        </CascadingValue>
    </div>
</div>