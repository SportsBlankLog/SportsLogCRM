@inherits FieldBaseComponentModel

<MudSelect T="EntryModel" Label="@Label" HelperText="@Hint" MultiSelection="true" @bind-SelectedValues="EntriesValues" ToStringFunc="converter">
    @if (Entries?.Any() == true)
    {
        @foreach (EntryModel d in Entries)
        {
            <MudSelectItem T="EntryModel" Value="@d">@d.Name</MudSelectItem>
        }
    }
</MudSelect>

@code {
    [Parameter]
    public IEnumerable<EntryModel>? Entries { get; set; }

    [Parameter]
    public EntryModel[]? Value { get; set; }
    EntryModel[]? _value;

    [Parameter]
    public EventCallback<EntryModel[]?> ValueChanged { get; set; }


    Func<EntryModel?, string> converter = p => p?.Name ?? "";

    public override bool IsEdited
    {
        get
        {
            if (Value?.Count() < 1 && _value?.Count() < 1)
                return false;
            else
                return
                Value?.Any(x => _value?.Any(y => y.Id == x.Id) != true) == true ||
                _value?.Any(x => Value?.Any(y => y.Id == x.Id) != true) == true;
        }
    }

    IEnumerable<EntryModel>? EntriesValues
    {
        get => Value;
        set
        {
            if (value is not null)
                Value = [.. value];
            else
                Value = null;

            ValueChanged.InvokeAsync(Value);
        }
    }

    protected override void OnInitialized()
    {
        _value = GlobalTools.CreateDeepCopy(Value);
    }
}