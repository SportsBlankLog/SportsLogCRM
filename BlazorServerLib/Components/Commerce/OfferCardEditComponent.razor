@using MudBlazor
@inherits BlazorBusyComponentBaseModel

<div class="card">
    <div class="card-header">
        <MudStack Row="true" Class="mb-3">
            <MudTextField Disabled="IsBusyProgress" @bind-Value="editOffer.Name" Label="Название" Variant="Variant.Outlined" Immediate ShrinkLabel></MudTextField>
            <MudSelect Disabled="IsBusyProgress" @bind-Value="editOffer.OfferUnit" Label="Единица измерения" Placeholder="Выбор ед.изм." Variant="Variant.Outlined">
                @foreach (UnitsOfMeasurementEnum u in Enum.GetValues(typeof(UnitsOfMeasurementEnum)).Cast<UnitsOfMeasurementEnum>())
                {
                    <MudSelectItem Value="u">@u.DescriptionInfo()</MudSelectItem>
                }
            </MudSelect>
            <MudNumericField Disabled="IsBusyProgress" @bind-Value="editOffer.Multiplicity" Label="Кратность" Variant="Variant.Outlined" Immediate />
            <MudNumericField Disabled="IsBusyProgress" @bind-Value="editOffer.Price" Label="Цена" Format="F1" Variant="Variant.Outlined" Immediate />
            <MudFab Disabled="(!CanSave || IsBusyProgress)" title="Сохранить изменения" OnClick="SaveOffer" StartIcon="@Icons.Material.Filled.Save" Color="@(CanSave ? Color.Info : Color.Default)" Size="Size.Small" Class="align-self-center" />
            @if (CanSave)
            {
                <MudFab OnClick="() => editOffer = GlobalTools.CreateDeepCopy(CurrentOffer)!" title="Отменить изменение" StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Surface" Size="Size.Small" Class="align-self-center" />
            }
        </MudStack>
        <MudSwitch @bind-Value="editOffer.IsDisabled" Label="Отключение" Color="Color.Secondary" />
    </div>
    <div class="card-body">
        <OrdersJournalComponent />
    </div>
</div>