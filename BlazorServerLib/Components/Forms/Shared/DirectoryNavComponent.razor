@if (DirectoryNavState == DirectoryNavStatesEnum.Create)
{
    <div class="input-group">
        <span class="input-group-text">новый:</span>
        <input @bind-value="NameNewDict" @bind-value:event="oninput" type="text" class="form-control" size="100" placeholder="Имя справочника">
        <input @bind-value="SystemCodeNewDict" @bind-value:event="oninput" type="text" class="form-control" size="100" placeholder="Системное имя">
        <button disabled="@(string.IsNullOrWhiteSpace(NameNewDict) || string.IsNullOrWhiteSpace(SystemCodeNewDict))" @onclick="TryCreateDirectory" class="btn btn-outline-success" type="button" id="button-addon1">@GetTitleForButtonCreate</button>
        <button @onclick="ResetNavForm" class="btn btn-outline-secondary" type="button" id="button-addon2">Отмена</button>
    </div>
}
else if (DirectoryNavState == DirectoryNavStatesEnum.Delete)
{
    <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
        <button @onclick="DeleteSelectedDirectoryHandler" class="btn btn-outline-danger" type="button" id="button-addon1">Удалить</button>
        <button @onclick="() => { DirectoryNavState = DirectoryNavStatesEnum.None; }" class="btn btn-outline-secondary" type="button" id="button-addon2">Отмена</button>
    </div>
}
else if (DirectoryNavState == DirectoryNavStatesEnum.Rename)
{
    <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
        <button @onclick="SaveRenameSelectedDirectoryHandler" class="btn btn-outline-secondary" type="button" id="button-addon1">Сохранить</button>
        <button @onclick="() => { DirectoryNavState = DirectoryNavStatesEnum.None; RenameSelectedDirectoryHandler(false); }" class="btn btn-outline-secondary" type="button" id="button-addon1">Отмена</button>
    </div>
}
else
{
    @if (IsSelectedDirectory)
    {
        <MudIconButton OnClick="() => { DirectoryNavState = DirectoryNavStatesEnum.Rename; RenameSelectedDirectoryHandler(true); }" Icon="@Icons.Material.Outlined.Edit" Size="Size.Small" />
        <MudIconButton OnClick="() => { DirectoryNavState = DirectoryNavStatesEnum.Delete; }" Icon="@Icons.Material.Outlined.Delete" />
    }
    <MudIconButton OnClick="() => { DirectoryNavState = DirectoryNavStatesEnum.Create; }" Icon="@Icons.Material.Outlined.Add" Size="Size.Small" />
}