@using BlazorWebLib.Components.Constructor.Pages
@inherits BlazorBusyComponentBaseModel

<div class="vstack gap-3">
    <div class="p-2"><h3>Генерация кода C#</h3></div>

    <CascadingValue Value="this">
        <div class="p-2">
            <ConfigManufactureComponent />
        </div>
        <div class="p-2">
            <CascadingValue Value="@ParentFormsPage.SystemNamesManufacture.Where(x => x.TypeDataName.StartsWith(DirectoryTypeName)).ToArray()">
                <EnumerationsManufactureComponent @ref="enumerations_ref" />
            </CascadingValue>
        </div>
        <div class="p-2">
            <CascadingValue Value="@ParentFormsPage.SystemNamesManufacture.Where(x => x.TypeDataName.StartsWith(DocumentSchemeConstructor)).ToArray()">
                <DocumentsManufactureComponent />
            </CascadingValue>
        </div>
    </CascadingValue>

    <div class="d-grid gap-2">
        <button class="btn btn-primary" type="button">Скачать C# .NET</button>
        <button class="btn btn-primary" type="button">Дамп JSON</button>
    </div>

</div>

@code {
    [Inject]
    IConstructorService ConstructorRepo { get; set; } = default!;

    [Inject]
    ISnackbar SnackbarRepo { get; set; } = default!;

    [Inject]
    IManufactureService ManufactureRepo { get; set; } = default!;


    /// <summary>
    /// Родительская страница форм
    /// </summary>
    [CascadingParameter, EditorRequired]
    public required ConstructorPage ParentFormsPage { get; set; }


    EnumerationsManufactureComponent enumerations_ref = default!;

    const string DirectoryTypeName = nameof(DirectoryConstructorModelDB);
    const string DocumentSchemeConstructor = nameof(DocumentSchemeConstructorModelDB);

    public ProjectConstructorModelDB CurrentProject { get; private set; } = default!;
    public ManageManufactureModelDB Manufacture { get; private set; } = default!;

    public async Task ReloadProjectData()
    {
        IsBusyProgress = true;
        ProjectConstructorModelDB? rest_project = await ConstructorRepo.ReadProject(ParentFormsPage.MainProject!.Id);
        CurrentProject = rest_project ?? throw new Exception();

        TResponseModel<ManageManufactureModelDB> rest_manufacture = await ManufactureRepo.ReadManufactureConfig(ParentFormsPage.MainProject.Id);
        if (!rest_manufacture.Success())
            SnackbarRepo.ShowMessagesResponse(rest_manufacture.Messages);
        Manufacture = rest_manufacture.Response ?? throw new Exception();
        IsBusyProgress = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await ReloadProjectData();
    }
}