@inherits BlazorBusyComponentBaseModel


<div class="vstack gap-3">
    <div class="p-2"><h3>Генерация кода C#</h3></div>

    <CascadingValue Value="this">
        <div class="p-2">
            <ConfigManufactureComponent />
        </div>
        <div class="p-2">
            <EnumerationsManufactureComponent />
        </div>
        <div class="p-2">
            <DocumentsManufactureComponent />
        </div>
        <div class="p-2">
            <FormsManufactureComponent />
        </div>
    </CascadingValue>
</div>


@code {
    [Inject]
    IConstructorService ConstructorRepo { get; set; } = default!;

    [Inject]
    ISnackbar SnackbarRepo { get; set; } = default!;

    [Inject]
    IManufactureService ManufactureRepo { get; set; } = default!;


    [Parameter, EditorRequired]
    public required int MainProjectId { get; set; }


    public ProjectConstructorModelDB CurrentProject { get; private set; } = default!;
    public ManageManufactureModelDB Manufacture { get; private set; } = default!;

    public async Task ReloadProjectData()
    {
        IsBusyProgress = true;
        ProjectConstructorModelDB? rest = await ConstructorRepo.ReadProject(MainProjectId);        
        CurrentProject = rest ?? throw new Exception();
                
        TResponseModel<ManageManufactureModelDB> res = await ManufactureRepo.ReadManufactureConfig(MainProjectId);
        IsBusyProgress = false;
        if (!res.Success())
            SnackbarRepo.ShowMessagesResponse(res.Messages);

        Manufacture = res.Response ?? throw new Exception();
    }

    protected override async Task OnInitializedAsync()
    {
        await ReloadProjectData();
    }
}