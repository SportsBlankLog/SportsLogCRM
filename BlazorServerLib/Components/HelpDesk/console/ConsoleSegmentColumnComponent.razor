@using MudBlazor

@inherits BlazorBusyComponentBaseModel

@if (IsBusyProgress)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
}

<div class="hstack">
    <h5 class="card-title">@StepIssue.DescriptionInfo()</h5>
    @if (IsLarge)
    {
        <div class="ms-auto">
            <input @bind-value="SearchQuery" @bind-value:event="oninput" title="Search for requests by topic, description and section name" type="text" class="form-control" placeholder="Search">
        </div>
    }
</div>
<hr />
@if (Issues.Count == 0)
{
    <figure class="text-center">
        <blockquote class="blockquote">
            <p>No data available.</p>
        </blockquote>
        <figcaption class="blockquote-footer">
            Calls <cite title="There are no calls in the @StepIssue.ToString() status">not found</cite>
        </figcaption>
    </figure>
}
else
{
    foreach (IssueHelpDeskModel issue_element in Issues)
    {
        <div class="card mb-2" @key="@($"{issue_element.Id}-{issue_element.StatusDocument}")">
            <div class="card-body p-3">
                <h6 class="card-title">@issue_element.Name</h6>
                @if (issue_element.RubricIssue is not null)
                {
                    <h7 class="card-subtitle mb-2 text-body-secondary">Рубрика: @issue_element.RubricIssue.Name</h7>
                }
                <hr class="mt-1 pt-1" />
                @{
                    OrderDocumentModelDB? current_order = OrdersCache.ContainsKey(issue_element.Id) ? OrdersCache.FirstOrDefault(x => x.Key == issue_element.Id).Value.FirstOrDefault() : null;
                    List<RecordsAttendanceModelDB>? current_order_attendance = OrdersAttendancesCache.ContainsKey(issue_element.Id) ? OrdersAttendancesCache.FirstOrDefault(x => x.Key == issue_element.Id).Value : null;
                }
                @if (!string.IsNullOrWhiteSpace(current_order?.Organization?.Name))
                {
                    <span>Юр.лицо: <u>@current_order.Organization!.Name</u></span>
                }
                <MudStack Row="true">
                    <a title="open an issue" href="/issue-card/@issue_element.Id" class="card-link">Goto</a>
                    <MudSpacer />
                    <code title="Date of last update">
                        @(IsLarge ? issue_element.LastUpdateAt.ToString("dd.MM.yy HH:mm") : issue_element.LastUpdateAt.GetCustomTime().ToString("d", GlobalStaticConstants.RU))
                    </code>
                </MudStack>
            </div>
        </div>
    }
    @if (Issues.Count < totalCount)
    {
        <div class="d-grid gap-2">
            <button @onclick="LoadData" class="btn btn-primary" type="button">Load more</button>
        </div>
    }
}