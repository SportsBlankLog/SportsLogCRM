@using BlazorLib
@using SharedLib

@inherits BlazorBusyComponentBaseModel

<h3>Классификатор адресов</h3>
<p>Загрузка данных КЛАДР 4.0 на удалённый сервер</p>

@if (IsBusyProgress)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-3" />
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Temporary</th>
                <th scope="col">Production</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope="row">KLADR</th>
                <td>@tmp?.ObjectsCount</td>
                <td>@prod?.ObjectsCount</td>
            </tr>
            <tr>
                <th scope="row">STREET</th>
                <td>@tmp?.StreetsCount</td>
                <td>@prod?.StreetsCount</td>
            </tr>
            <tr>
                <th scope="row">DOMA</th>
                <td>@tmp?.DomaCount</td>
                <td>@prod?.DomaCount</td>
            </tr>
            <tr>
                <th scope="row">NAMEMAP</th>
                <td>@tmp?.NamesCount</td>
                <td>@prod?.NamesCount</td>
            </tr>
            <tr>
                <th scope="row">SOCRBASE</th>
                <td>@tmp?.SocrbasesCount</td>
                <td>@prod?.SocrbasesCount</td>
            </tr>
            <tr>
                <th scope="row">ALTNAMES</th>
                <td>@tmp?.AltnamesCount</td>
                <td>@prod?.AltnamesCount</td>
            </tr>
        </tbody>
    </table>
}

<label for="exampleFormControlInputFile" class="form-label">Добавьте файлы классификатора (*.dbf):</label>
<div class="input-group mb-3">
    <InputFile @key=@(_inputFileId) class="form-control" OnChange="SelectFilesChange" id="exampleFormControlInputFile" multiple />
    <button @onclick="SendFile" disabled="@(IsBusyProgress || loadedFiles.Count == 0)" class="btn btn-outline-secondary" type="button">@(loadedFiles.Count == 0 ? "Выберете файл для отправки..." : "Отправить")</button>
    @if (loadedFiles.Count != 0)
    {
        <button @onclick="() => { loadedFiles.Clear(); _inputFileId = Guid.NewGuid().ToString(); }" disabled="@IsBusyProgress" class="btn btn-light" type="button">Сброс</button>
    }
</div>

@if (loadedFiles.Count != 0)
{
    <code>Выбранные файлы (@(GlobalTools.SizeDataAsString(loadedFiles.Sum(x => x.Size)))):</code>
    <ol class="list-group list-group-numbered mb-2">
        @foreach (IBrowserFile file_element in loadedFiles)
        {
            <li class="list-group-item d-flex justify-content-between align-items-start">
                <div class="ms-2 me-auto">
                    <div class="fw-bold">@file_element.Name</div>
                    @GlobalTools.SizeDataAsString(file_element.Size)
                </div>
                <span title="последнее изменение" class="badge text-bg-primary rounded-pill">@file_element.LastModified</span>
            </li>
        }
    </ol>
}